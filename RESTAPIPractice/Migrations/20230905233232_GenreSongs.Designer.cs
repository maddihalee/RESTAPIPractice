// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RESTAPIPractice.Models;

#nullable disable

namespace RESTAPIPractice.Migrations
{
    [DbContext(typeof(RESTAPIPracticeDbContext))]
    [Migration("20230905233232_GenreSongs")]
    partial class GenreSongs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("integer");

                    b.Property<int>("SongsId")
                        .HasColumnType("integer");

                    b.HasKey("GenresId", "SongsId");

                    b.HasIndex("SongsId");

                    b.ToTable("GenreSong");

                    b.HasData(
                        new
                        {
                            GenresId = 123,
                            SongsId = 234
                        },
                        new
                        {
                            GenresId = 124,
                            SongsId = 236
                        },
                        new
                        {
                            GenresId = 125,
                            SongsId = 235
                        },
                        new
                        {
                            GenresId = 125,
                            SongsId = 237
                        });
                });

            modelBuilder.Entity("RESTAPIPractice.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 47,
                            Bio = "Lead singer of Death Cab for Cutie",
                            Name = "Ben Gibbard"
                        },
                        new
                        {
                            Id = 2,
                            Age = 48,
                            Bio = "Lead of both Galantis and Miike Snow",
                            Name = "Lars Karlsson"
                        },
                        new
                        {
                            Id = 3,
                            Age = 30,
                            Bio = "Also known as Subtronics",
                            Name = "Jesse Kardon"
                        },
                        new
                        {
                            Id = 4,
                            Age = 47,
                            Bio = "Lead singer of OK Go",
                            Name = "Damian Kulash"
                        });
                });

            modelBuilder.Entity("RESTAPIPractice.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 123,
                            Description = "Indie music",
                            Name = "Indie"
                        },
                        new
                        {
                            Id = 124,
                            Description = "A genre of EDM",
                            Name = "Dubstep"
                        },
                        new
                        {
                            Id = 125,
                            Description = "Popular music",
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 126,
                            Description = "a popular genre of music that consists of many sub-genres",
                            Name = "Rock"
                        });
                });

            modelBuilder.Entity("RESTAPIPractice.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Album")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ArtistId")
                        .HasColumnType("integer");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 234,
                            Album = "Kintsugi",
                            ArtistId = 1,
                            Length = "4 minutes and 14 seconds",
                            Title = "The Ghosts of Beverly Drive"
                        },
                        new
                        {
                            Id = 235,
                            Album = "Miike Snow",
                            ArtistId = 2,
                            Length = "4 minutes 24 seconds",
                            Title = "Animal"
                        },
                        new
                        {
                            Id = 236,
                            Album = "Bangers[2].Zip",
                            ArtistId = 3,
                            Length = "3 minutes and 18 seconds",
                            Title = "Griztronics"
                        },
                        new
                        {
                            Id = 237,
                            Album = "OK Go",
                            ArtistId = 4,
                            Length = "3 minutes and 17 seconds",
                            Title = "Get Over It"
                        });
                });

            modelBuilder.Entity("GenreSong", b =>
                {
                    b.HasOne("RESTAPIPractice.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RESTAPIPractice.Models.Song", null)
                        .WithMany()
                        .HasForeignKey("SongsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
